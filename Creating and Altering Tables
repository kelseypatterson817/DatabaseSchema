-- Table: public.donation
-- DROP TABLE public.donation;
CREATE TABLE public.donation
(
 donationkey integer NOT NULL DEFAULT 
nextval('donation_donationkey_seq'::regclass),
 personkey integer,
 donationamount numeric NOT NULL,
 donationdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
 donationvalidation uuid DEFAULT uuid_generate_v4(),
 CONSTRAINT donation_pkey PRIMARY KEY (donationkey),
 CONSTRAINT donation_personkey_fkey FOREIGN KEY (personkey)
 REFERENCES public.person (personkey) MATCH SIMPLE
 ON UPDATE NO ACTION
 ON DELETE NO ACTION
)
WITH (
 OIDS = FALSE
)
TABLESPACE pg_default;
ALTER TABLE public.donation
 OWNER to postgres;

CREATE TABLE “location”
(
 locationkey SERIAL PRIMARY KEY,
 locationname TEXT NOT NULL,
 locationaddress TEXT NOT NULL,
 locationcity TEXT DEFAULT 'Seattle',
 locationstate CHAR(2) DEFAULT 'WA',
 locationzip VARCHAR(11) NOT NULL,
 locationphone VARCHAR(13) NOT NULL,
 locationemail TEXT NOT NULL UNIQUE,
 locationURL TEXT
);

CREATE TABLE "event"
(
 eventkey SERIAL PRIMARY KEY,
 eventname TEXT NOT NULL,
 eventdate DATE NOT NULL,
 eventtime TIME NOT NULL,
 eventdescription TEXT,
 employeekey INT REFERENCES employee(Employeekey)
);

CREATE TABLE locationroom
( 
 locationroomkey SERIAL,
 locationkey INT,
 roomnumber INT NOT NULL, 
 eventkey INT
);

ALTER TABLE locationroom
ADD PRIMARY KEY (locationroomkey);

ALTER TABLE locationroom
ADD CONSTRAINT fk_location FOREIGN KEY (locationkey) 
 REFERENCES location(locationkey);

ALTER TABLE locationroom
ADD CONSTRAINT fk_event FOREIGN KEY (eventkey)
REFERENCES event(eventkey);

CREATE TABLE personevent
(
 personkey INT NOT NULL,
 eventkey INT NOT NULL
);

ALTER TABLE personevent
ADD CONSTRAINT pk_personevent PRIMARY KEY(personkey, eventkey);

ALTER TABLE personevent
ADD CONSTRAINT fk_personevent_person FOREIGN KEY (personkey)
 REFERENCES person(personkey),
ADD CONSTRAINT fk_personevent_even FOREIGN KEY (eventkey)
REFERENCES event(eventkey);

ALTER TABLE person
ADD anouncement BOOLEAN DEFAULT TRUE;

ALTER TABLE person
DROP COLUMN anouncement;
ALTER TABLE person
ADD announcement BOOLEAN DEFAULT TRUE;

ALTER TABLE donation
ADD CONSTRAINT ck_donation CHECK (donationamount > 0);

ALTER TABLE grantstatus
ADD CONSTRAINT chk_status CHECK (status IN(‘pending’, ‘granted’, ‘reduced’, 
‘denied’))

CREATE TEMP TABLE emailList
(
 lastname text,
 firstname text,
 email text
);

INSERT INTO emailList(lastname, firstname, email)
SELECT personlastname, personfirstname, personemail
FROM person;

SELECT * FROM emaillist;

DROP TABLE emailList;
SELECT personlastname, personfirstname, personemail INTO TEMP EmailList
FROM person;

SELECT grantapplication.grantapplicationkey, 
grantapplicationamount AS request, 
statusname, grantstatusfinalallocation as allocated
INTO TEMP grantinfo 
FROM grantapplication
JOIN grantstatus USING(grantapplicationkey)
JOIN status USING(statuskey);

SELECT statusname, 
SUM(request) totalrequest, 
SUM(allocated) TotalAllocated,
SUM(request)-SUM(allocated) difference
FROM grantinfo
Group by statusname;

SELECT SUM(request) totalrequest, 
SUM(allocated) totalallocated,
SUM(request)-SUM(allocated) difference
FROM grantinfo;

